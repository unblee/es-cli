// Code generated by Wire. DO NOT EDIT.

//go:generate wire
//+build !wireinject

package cmd

import (
	"context"
	"github.com/unblee/es-cli/config"
	"github.com/unblee/es-cli/domain"
	"github.com/unblee/es-cli/infra/es"
	"github.com/unblee/es-cli/infra/http"
	"github.com/unblee/es-cli/infra/logger"
	"github.com/spf13/cobra"
	"go.uber.org/zap"
)

// Injectors from wire.go:

func InitializeCmd(ctx context.Context, cfg config.Config) (*cobra.Command, error) {
	client := http.NewClient(cfg)
	baseClient, err := es.NewBaseClient(cfg, client)
	if err != nil {
		return nil, err
	}
	index := domain.NewIndex(baseClient)
	detail := domain.NewDetail(baseClient, index)
	alias := domain.NewAlias(baseClient)
	command := NewCmdRoot(ctx, index, detail, alias)
	return command, nil
}

func InitializeLogger(cfg config.Config) (*zap.Logger, error) {
	zapLogger, err := logger.NewLogger(cfg)
	if err != nil {
		return nil, err
	}
	return zapLogger, nil
}
